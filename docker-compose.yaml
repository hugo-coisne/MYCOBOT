services:
  backend:
    build: ./backend
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    environment:
      - FLASK_ENV=development
    profiles:
      - app
      - all

  frontend:
    build: ./frontend
    ports:
      - "4200:80"
    profiles:
      - app
      - all
  
  # Monitoring
  otelcol:
    image: ${COLLECTOR_CONTRIB_IMAGE}
    container_name: otel-col
    restart: unless-stopped
    command: [ "--config=/etc/otelcol-config.yml", "--config=/etc/otelcol-config-extras.yml" ]
    user: 0:0
    volumes:
      - ${HOST_FILESYSTEM}:/hostfs:ro,rslave
      - ${DOCKER_SOCK}:/var/run/docker.sock:ro
      - ${OTEL_COLLECTOR_CONFIG}:/etc/otelcol-config.yml
      - ${OTEL_COLLECTOR_CONFIG_EXTRAS}:/etc/otelcol-config-extras.yml
    ports:
      - "${OTEL_COLLECTOR_PORT_HTTP}"
      - "${OTEL_COLLECTOR_PORT_GRPC}"
      - "8888:8888"
    environment:
      - HOST_FILESYSTEM
      - OTEL_COLLECTOR_HOST
      - OTEL_COLLECTOR_PORT_GRPC
      - OTEL_COLLECTOR_PORT_HTTP
    profiles:
      - monitoring
      - all
  
  grafana:
    image: ${GRAFANA_IMAGE}
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - "${GRAFANA_SERVICE_PORT}:${GRAFANA_SERVICE_PORT}"
    profiles:
      - monitoring
      - all

  # Testing
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6  
    profiles:
      - load-testing
      - all
    depends_on:
      - backend
      - frontend
  k6:
    image: grafana/k6:latest
    container_name: k6
    ports:
      - "6565:6565"
    volumes:
      - ./k6/scripts/test.js:/test.js
    command: run /test.js
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
    profiles:
      - load-testing
      - all
    depends_on:
      influxdb: 
        condition: service_started